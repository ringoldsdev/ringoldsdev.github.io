---
import BlogLayout from "@/layouts/BlogLayout.astro";
import Tags from "@/components/Tags.astro";
import TagLink from "@/components/TagLink.astro";
import { getCollection } from "astro:content";

// Personal bio and skills
const bio = [
	"I'm Ringolds,",
	"A data engineer who started as a full-stack engineer.",
	"I specialise in building serverless [big]data pipelines and performant backends.",
	"I don't shy away from using AI but I also stick to fundamentals to create systems that scale.",
];

const skills = [
	"Python",
	"Node.js",
	"GCP",
	"AWS",
	"Serverless",
	"BigQuery",
	"Terraform",
	"Github Actions",
];

// Fetch and sort blog posts by date (descending)
const posts = (await getCollection("blog")).sort((a, b) => {
	const dateA = a.data.pubDate
		? new Date(
				a.data.pubDate instanceof Date
					? a.data.pubDate
					: String(a.data.pubDate),
			)
		: new Date(0);
	const dateB = b.data.pubDate
		? new Date(
				b.data.pubDate instanceof Date
					? b.data.pubDate
					: String(b.data.pubDate),
			)
		: new Date(0);
	return dateB.getTime() - dateA.getTime();
});
---

<BlogLayout title="Ringolds â€“ Web Developer" backgroundText="Ringolds.dev">
	<div slot="hero" class="pb-8 md:text-center text-white">
		<div class="lg:max-w-screen-md mx-auto lg:px-20">
			{bio.map((line) => <p class="text-xl md:text-2xl mb-4">{line}</p>)}

			<Tags class="-ml-4 sm:ml-0 mt-8">
				{
					skills.map((skill) => (
						<TagLink
							href={`/tags/${skill.toLowerCase().replace(/\s+/g, "-")}`}
							text={skill}
						/>
					))
				}
			</Tags>
		</div>
	</div>
	<div
		class="lg:max-w-screen-md mx-auto bg-white dark:bg-[rgb(15,15,15)] text-black dark:text-[rgb(230,230,230)] -mt-5 sm:-mt-40 relative z-10"
	>
		<div class="max-w-screen-md p-8 sm:p-20 mx-auto">
			<h3 class="text-xl font-semibold mb-6 text-gray-800 dark:text-gray-100">
				Latest Blog Posts
			</h3>
			<ul class="space-y-8">
				{
					posts.map((post) => (
						<li>
							<a href={`/blog/${post.id}`} class="block group">
								<h4 class="text-2xl font-bold text-gray-900 dark:text-gray-100 group-hover:text-accent-400 transition-colors duration-200 font-display mb-1">
									{post.data.title}
								</h4>
								<p class="text-gray-500 dark:text-gray-300 text-sm mb-1">
									{post.data.pubDate &&
										new Date(post.data.pubDate).toLocaleDateString("en-US", {
											year: "numeric",
											month: "long",
											day: "numeric",
										})}
								</p>
								<p class="text-gray-700 dark:text-gray-300 text-base mb-2">
									{post.data.description}
								</p>
								<Tags class="mt-2 justify-start">
									{Array.isArray(post.data.tags) &&
										post.data.tags.map((tag) => (
											<TagLink
												href={`/tags/${tag.toLowerCase()}`}
												text={tag}
												class="bg-gray-100 text-gray-500 hover:bg-gray-200 hover:text-black"
											/>
										))}
								</Tags>
							</a>
						</li>
					))
				}
			</ul>
		</div>
	</div>
</BlogLayout>
